// import React, { useEffect, useState } from "react";
// import axios from "axios";
// import { v4 as uuidv4 } from "uuid";

// const formatDate = (isoString) => {
//   if (!isoString) return "N/A";
//   const date = new Date(isoString);
//   return date.toLocaleString("en-US", {
//     month: "long",
//     day: "numeric",
//     year: "numeric",
//     hour: "numeric",
//     minute: "numeric",
//     hour12: true,
//   });
// };

// const AssignmentTable = ({ activeTab }) => {
//   const [assignments, setAssignments] = useState([]);
//   const [submittedAssignment, setSubmittedAssignment] = useState(null);
//   const [code, setCode] = useState("");
//   const [submissionStatus, setSubmissionStatus] = useState(null);

//   useEffect(() => {
//     const fetchAssignments = async () => {
//       try {
//         const response = await axios.get("http://localhost:5067/api/Assignment");
//         const data = response.data;
//         console.log("Assignments fetched:", data);
//         setAssignments(data);
//       } catch (error) {
//         console.error("Error fetching assignments:", error);
//       }
//     };
//     fetchAssignments();
//   }, []);

//   const handleCodeChange = (e) => {
//     setCode(e.target.value);
//   };

//   const handleSubmitClick = (assignmentId) => {
//     setSubmittedAssignment(submittedAssignment === assignmentId ? null : assignmentId);
//   };

//   const handleFormSubmit = async () => {
//     const studentId = localStorage.getItem("userId");
//     if (!studentId) {
//       alert("User ID not found. Please log in again.");
//       return;
//     }

//     if (code.trim()) {
//       const generatedId = uuidv4(); // Generate a unique ID for submission

//       const submissionData = {
//         id: generatedId,
//         studentId: studentId,
//         submittedCode: code,
//         assignmentId: submittedAssignment,
//       };

//       try {
//         const response = await axios.post(
//           "http://localhost:5067/api/AssignmentSubmission",
//           submissionData, // Send data as JSON
//           { headers: { "Content-Type": "application/json" } }
//         );

//         if (response.status === 200 || response.status === 201) {
//           setSubmissionStatus("success");
//           alert("Submission successful!");
//         } else {
//           setSubmissionStatus("failed");
//           alert(`Submission failed: ${response.data?.message || "Please try again."}`);
//         }
//       } catch (error) {
//         if (error.response && error.response.data && error.response.data.errors) {
//           console.error("Validation Errors:", error.response.data.errors);
//           alert("Validation failed: " + JSON.stringify(error.response.data.errors));
//         } else {
//           console.error("Error submitting assignment:", error.message);
//           alert("Error: Submission failed.");
//         }
//       }
//     } else {
//       alert("Please enter the code before submitting.");
//     }
//   };

  // const checkSubmissionStatus = async (studentId, assignmentId) => {
  //   try {
  //     const response = await axios.get(
  //       `http://localhost:5067/api/AssignmentSubmission/check-submission/${studentId}/${assignmentId}`
  //     );
  //     return response.data; // Returns true or false
  //   } catch (error) {
  //     console.error("Error checking submission status:", error);
  //     return false;
  //   }
  // };

//   // return (
//   //   <div className="p-4">
//   //     <table className="min-w-full border-collapse border border-gray-300 mt-20">
//   //       <thead className="bg-gray-200">
//   //         <tr>
//   //           <th className="border border-gray-300 px-6 py-2">Index</th>
//   //           <th className="border border-gray-300 px-6 py-2">Assignment Description</th>
//   //           <th className="border border-gray-300 px-6 py-2">Subject</th>
//   //           <th className="border border-gray-300 px-6 py-2">Created Date</th>
//   //           <th className="border border-gray-300 px-6 py-2">Due Date</th>
//   //           <th className="border border-gray-300 px-6 py-2">Action</th>
//   //         </tr>
//   //       </thead>
//   //       <tbody>
//   //         {assignments.map((assignmentData, index) => {
//   //           const assignment = assignmentData.assignment;

//   //           if (!assignment) {
//   //             return (
//   //               <tr key={index}>
//   //                 <td colSpan="6" className="border border-gray-300 px-6 py-2">
//   //                   Invalid assignment data
//   //                 </td>
//   //               </tr>
//   //             );
//   //           }
//   //           return (
//   //             <React.Fragment key={assignment.id}>
//   //               <tr>
//   //                 <td className="border border-gray-300 px-6 py-2 text-center">{index + 1}</td>
//   //                 <td className="border border-gray-300 px-6 py-2">{assignment.description}</td>
//   //                 <td className="border border-gray-300 px-6 py-2">{assignmentData.subjectName}</td>
//   //                 <td className="border border-gray-300 px-6 py-2">{formatDate(assignment.createdDate)}</td>
//   //                 <td className="border border-gray-300 px-6 py-2">{formatDate(assignment.dueDate)}</td>
//   //                 <td className="border border-gray-300 px-6 py-2 text-center">
//   //                   {assignmentData.isSubmitted ? (
//   //                     <span className="text-green-500 font-bold">Submitted</span>
//   //                   ) : activeTab !== "Completed" ? (
//   //                     <button
//   //                       className="bg-blue-500 text-white px-4 py-2 rounded"
//   //                       onClick={() => handleSubmitClick(assignment.id)}
//   //                     >
//   //                       Submit Assignment
//   //                     </button>
//   //                   ) : (
//   //                     <button className="bg-green-500 text-white px-4 py-2 rounded">
//   //                       View Score
//   //                     </button>
//   //                   )}
//   //                 </td>
//   //               </tr>

//   //               {submittedAssignment === assignment.id && (
//   //                 <tr>
//   //                   <td colSpan="6" className="border border-gray-300 p-4 bg-gray-100">
//   //                     <h3 className="text-xl font-semibold mb-4">
//   //                       Submit Code for Assignment {assignment.name}
//   //                     </h3>
//   //                     <div className="mb-4">
//   //                       <label className="block text-sm font-medium text-gray-700">
//   //                         Enter Code:
//   //                       </label>
//   //                       <textarea
//   //                         value={code}
//   //                         onChange={handleCodeChange}
//   //                         rows="4"
//   //                         className="mt-1 block w-full p-2 border border-gray-300 rounded"
//   //                         placeholder="Enter your code here"
//   //                       ></textarea>
//   //                     </div>
//   //                     <button
//   //                       onClick={handleFormSubmit}
//   //                       className="bg-green-500 text-white px-4 py-2 rounded"
//   //                     >
//   //                       Submit
//   //                     </button>
//   //                     {submissionStatus === "success" && (
//   //                       <div className="mt-2 text-green-600">Submission successful!</div>
//   //                     )}
//   //                     {submissionStatus === "failed" && (
//   //                       <div className="mt-2 text-red-600">Submission failed. Please try again.</div>
//   //                     )}
//   //                   </td>
//   //                 </tr>
//   //               )}
//   //             </React.Fragment>
//   //           );
//   //         })}
//   //       </tbody>
//   //     </table>
//   //   </div>
//   // );





//   return (
//     <div className="p-4">
//       <table className="min-w-full border-collapse border border-gray-300 mt-20">
//         <thead className="bg-gray-200">
//           <tr>
//             <th className="border border-gray-300 px-6 py-2">Index</th>
//             <th className="border border-gray-300 px-6 py-2">Assignment Description</th>
//             <th className="border border-gray-300 px-6 py-2">Subject</th>
//             <th className="border border-gray-300 px-6 py-2">Created Date</th>
//             <th className="border border-gray-300 px-6 py-2">Due Date</th>
//             <th className="border border-gray-300 px-6 py-2">Action</th>
//           </tr>
//         </thead>
//         <tbody>
//           {assignments.map((assignmentData, index) => {
//             const assignment = assignmentData.assignment;
//             const studentId = localStorage.getItem("userId");

//             if (!assignment) {
//               return (
//                 <tr key={index}>
//                   <td colSpan="6" className="border border-gray-300 px-6 py-2">
//                     Invalid assignment data
//                   </td>
//                 </tr>
//               );
//             }

//             const submissionStatus = checkSubmissionStatus(studentId, assignment.id);

//             return (
//               <tr key={assignment.id}>
//                 <td className="border border-gray-300 px-6 py-2 text-center">{index + 1}</td>
//                 <td className="border border-gray-300 px-6 py-2">{assignment.description}</td>
//                 <td className="border border-gray-300 px-6 py-2">{assignment.subjectName}</td>
//                 <td className="border border-gray-300 px-6 py-2">{formatDate(assignment.createdDate)}</td>
//                 <td className="border border-gray-300 px-6 py-2">{formatDate(assignment.dueDate)}</td>
//                 <td className="border border-gray-300 px-6 py-2 text-center">
//                   {submissionStatus === "true" ? (
//                     <button className="bg-green-500 text-white px-4 py-2 rounded">
//                       View Result
//                     </button>
//                   ) : (
//                     <button
//                       className={`bg-blue-500 text-white px-4 py-2 rounded ${!code.trim() ? "opacity-50 cursor-not-allowed" : ""}`}
//                       onClick={() => handleSubmitClick(assignment.id)}
//                       disabled={!code.trim()}
//                     >
//                       Submit Assignment
//                     </button>
//                   )}
//                 </td>
//               </tr>
//             );
//           })}
//         </tbody>
//       </table>
//     </div>
//   );
// };

// export default AssignmentTable;
















 // const handleFormSubmit = async () => {
  //   const studentId = localStorage.getItem("userId");
  //   if (!studentId) {
  //     alert("User ID not found. Please log in again.");
  //     return;
  //   }
  
  //   if (code) {
  //     // Generate a unique ID using uuid
  //     const generatedId = uuidv4();  // Generate a unique ID
  //     const formData = new FormData();
  //     formData.append("studentId", studentId);
  //     formData.append("assignmentId", generatedId);  // Use the generated ID
  //     formData.append("submittedCode", code);
  
  //     try {
  //       const response = await axios.post(
  //         "http://localhost:5067/api/AssignmentSubmission",
  //         formData,
  //         { headers: { "Content-Type": "multipart/form-data" } }
  //       );
  
  //       if (response.status === 200 || response.status === 201) {
  //         alert("Submission successful!");
  //       } else {
  //         alert(`Submission failed: ${response.data?.message || "Please try again."}`);
  //       }
  //     } catch (error) {
  //       if (error.response && error.response.data && error.response.data.errors) {
  //         console.error("Validation Errors:", error.response.data.errors);
  //         alert("Validation failed: " + JSON.stringify(error.response.data.errors));
  //       } else {
  //         console.error("Error submitting assignment:", error.message);
  //         alert("Error: Submission failed.");
  //       }
  //     }
  //   } else {
  //     alert("Please enter the code before submitting.");
  //   }
  // };
  
  
  // const handleFormSubmit = async () => {
  //   const studentId = localStorage.getItem("userId");
  //   if (!studentId) {
  //     alert("User ID not found. Please log in again.");
  //     return;
  //   }
  
  //   if (code) {
  //     // Prepare data as JSON
  //     const generatedId = uuidv4();  // Generate a unique ID
  //         const formData = new FormData();
  //         formData.append("id", generatedId);
  //         formData.append("studentId", studentId);
  //         formData.append("assignmentId", generatedId);  // Use the generated ID
  //         formData.append("submittedCode", code);
  //         formData.append("executionImage", "ssss");
  
  //     try {
  //       const response = await axios.post(
  //         "http://localhost:5067/api/AssignmentSubmission",
  //         formData, // Send data as JSON
  //         { headers: { "Content-Type": "application/json" } } // Ensure this header is set
  //       );
  
  //       if (response.status === 200 || response.status === 201) {
  //         alert("Submission successful!");
  //       } else {
  //         alert(`Submission failed: ${response.data?.message || "Please try again."}`);
  //       }
  //     } catch (error) {
  //       if (error.response && error.response.data && error.response.data.errors) {
  //         console.error("Validation Errors:", error.response.data.errors);
  //         alert("Validation failed: " + JSON.stringify(error.response.data.errors));
  //       } else {
  //         console.error("Error submitting assignment:", error.message);
  //         alert("Error: Submission failed.");
  //       }
  //     }
  //   } else {
  //     alert("Please enter the code before submitting.");
  //   }
  // };
  

//   const handleFormSubmit = async () => {
//     const studentId = localStorage.getItem("userId");
//     if (!studentId) {
//       alert("User ID not found. Please log in again.");
//       return;
//     }
  
//     if (code) {
//       // Retrieve assignmentId from somewhere or pass the correct one
//       const generatedId = uuidv4();  // Generate a unique ID
      
     
//       const formData = new FormData();
//       formData.append("studentId", studentId);
//       formData.append("submittedCode", code);
//       formData.append("assignmentId", submittedAssignment);
//       formData.append("id", generatedId);


      

//       try {
//         const response = await axios.post(
//           "http://localhost:5067/api/AssignmentSubmission",
//           formData  // Do not manually set the Content-Type header
//         );

//         if (response.status === 200 || response.status === 201) {
//           alert("Submission successful!");
//         } else {
//           alert(`Submission failed: ${response.data?.message || "Please try again."}`);
//         }
//       } catch (error) {
//         if (error.response && error.response.data && error.response.data.errors) {
//           console.error("Validation Errors:", error.response.data.errors);
//           alert("Validation failed: " + JSON.stringify(error.response.data.errors));
//         } else {
//           console.error("Error submitting assignment:", error.message);
//           alert("Error: Submission failed.");
//         }
//       }
//     } else {
//       alert("Please enter the code before submitting.");
//     }
// };




// // import React, { useEffect, useState } from "react";

// // const formatDate = (isoString) => {
// //   if (!isoString) return "N/A"; // Return a default value if isoString is undefined or empty

// //   // Create a new Date object from the ISO string
// //   const date = new Date(isoString);

// //   // Return a formatted date string
// //   return date.toLocaleString("en-US", {
// //     month: "long",
// //     day: "numeric",
// //     year: "numeric",
// //     hour: "numeric",
// //     minute: "numeric",
// //     hour12: true,
// //   });
// // };

// // const AssignmentTable = ({ activeTab }) => {
// //   const [assignments, setAssignments] = useState([]);
// //   const [submittedAssignment, setSubmittedAssignment] = useState(null);
// //   const [code, setCode] = useState("");
// //   const [file, setFile] = useState(null);

// //   useEffect(() => {
// //     // Fetch assignments from the API
// //     const fetchAssignments = async () => {
// //       try {
// //         const response = await fetch("http://localhost:5067/api/Assignment"); 
// //         const data = await response.json();
// //         setAssignments(data);
// //       } catch (error) {
// //         console.error("Error fetching assignments:", error);
// //       }
// //     };

// //     fetchAssignments();
// //   }, []);

// //   const handleFileChange = (e) => {
// //     setFile(e.target.files[0]);
// //   };

// //   const handleCodeChange = (e) => {
// //     setCode(e.target.value);
// //   };

// //   const handleSubmitClick = (assignmentId) => {
// //     if (submittedAssignment === assignmentId) {
// //       setSubmittedAssignment(null);
// //     } else {
// //       setSubmittedAssignment(assignmentId);
// //     }
// //   };

// //   const handleFormSubmit = async () => {
// //     if (code && file) {
// //       const formData = new FormData();
// //       const studentId = localStorage.getItem("userId"); // Define studentId here
// //       formData.append("studentId", studentId);
// //       formData.append("assignmentId", submittedAssignment);
// //       formData.append("submittedCode", code);
// //       formData.append("executionImage", file);
  
// //        // Now this will work
  
// //       try {
// //         const response = await fetch("http://localhost:5067/api/AssignmentSubmission", {
// //           method: "POST",
// //           body: formData,
// //         });
  
// //         if (response.ok) {
// //           console.log("Submission successful!");
// //           alert("Submission successful!");
// //           // Reset after submission
// //           setSubmittedAssignment(null);
// //           setCode("");
// //           setFile(null);
// //         } else {
// //           const errorData = await response.json();
// //           console.error("Submission failed:", errorData);
// //           alert("Submission failed. Please try again.");
// //         }
// //       } catch (error) {
// //         console.error("Error submitting assignment:", error);
// //         alert("Error submitting assignment. Please try again.");
// //       }
// //     } else {
// //       alert("Please enter the code and upload a file.");
// //     }
// //   };
  
  

// //   return (
// //     <div className="p-4">
// //       <table className="min-w-full border-collapse border border-gray-300 mt-20">
// //         <thead className="bg-gray-200">
// //           <tr>
// //             <th className="border border-gray-300 px-6 py-2">Index</th>
// //             {/* <th className="border border-gray-300 px-6 py-2">Assignment Name</th> */}
// //             <th className="border border-gray-300 px-6 py-2">Assignment Description</th>
// //             <th className="border border-gray-300 px-6 py-2">Subject</th>
// //             <th className="border border-gray-300 px-6 py-2">Created Date</th>
// //             <th className="border border-gray-300 px-6 py-2">Due Date</th>
// //             <th className="border border-gray-300 px-6 py-2">Action</th>
// //           </tr>
// //         </thead>
// //         <tbody>
// //           {assignments.map((assignmentData, index) => {
// //             const assignment = assignmentData.assignment; // Get the assignment object
// //             return (
// //               <React.Fragment key={assignment.id}>
// //                 <tr>
// //                   <td className="border border-gray-300 px-6 py-2 text-center">{index + 1}</td>
// //                   {/* <td className="border border-gray-300 px-6 py-2">{assignment.name}</td> */}
// //                   <td className="border border-gray-300 px-6 py-2">{assignment.description}</td>
// //                   <td className="border border-gray-300 px-6 py-2">{assignmentData.subjectName}</td>
// //                   <td className="border border-gray-300 px-6 py-2">{formatDate(assignment.createdDate)}</td>
// //                   <td className="border border-gray-300 px-6 py-2">{formatDate(assignment.dueDate)}</td>
// //                   <td className="border border-gray-300 px-6 py-2 text-center">
// //                     {activeTab !== "Completed" ? (
// //                       <button
// //                         className="bg-blue-500 text-white px-4 py-2 rounded"
// //                         onClick={() => handleSubmitClick(assignment.id)}
// //                       >
// //                         Submit Assignment
// //                       </button>
// //                     ) : (
// //                       <button className="bg-green-500 text-white px-4 py-2 rounded">
// //                         View Score
// //                       </button>
// //                     )}
// //                   </td>
// //                 </tr>

// //                 {submittedAssignment === assignment.id && (
// //                   <tr>
// //                     <td colSpan="7" className="border border-gray-300 p-4 bg-gray-100">
// //                       <h3 className="text-xl font-semibold mb-4">
// //                         Submit Code and File for Assignment {assignment.name}
// //                       </h3>
// //                       <div className="mb-4">
// //                         <label className="block text-sm font-medium text-gray-700">
// //                           Enter Code:
// //                         </label>
// //                         <textarea
// //                           value={code}
// //                           onChange={handleCodeChange}
// //                           rows="4"
// //                           className="mt-1 block w-full p-2 border border-gray-300 rounded"
// //                           placeholder="Enter your code here"
// //                         ></textarea>
// //                       </div>
// //                       <div className="mb-4">
// //                         <label className="block text-sm font-medium text-gray-700">
// //                           Upload File:
// //                         </label>
// //                         <input
// //                           type="file"
// //                           onChange={handleFileChange}
// //                           className="mt-1 block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4 file:rounded-full file:border-0 file:bg-blue-50 file:text-blue-700 hover:file:bg-blue-100"
// //                         />
// //                       </div>
// //                       <button
// //                         onClick={handleFormSubmit}
// //                         className="bg-green-500 text-white px-4 py-2 rounded"
// //                       >
// //                         Submit
// //                       </button>
// //                     </td>
// //                   </tr>
// //                 )}
// //               </React.Fragment>
// //             );
// //           })}
// //         </tbody>
// //       </table>
// //     </div>
// //   );
// // };

// // export default AssignmentTable;



// // import React, { useEffect, useState } from "react";

// // const formatDate = (isoString) => {
// //   if (!isoString) return "N/A"; // Return a default value if isoString is undefined or empty
// //   const date = new Date(isoString);
// //   return date.toLocaleString("en-US", {
// //     month: "long",
// //     day: "numeric",
// //     year: "numeric",
// //     hour: "numeric",
// //     minute: "numeric",
// //     hour12: true,
// //   });
// // };

// // const AssignmentTable = ({ activeTab }) => {
// //   const [assignments, setAssignments] = useState([]);
// //   const [submittedAssignment, setSubmittedAssignment] = useState(null);
// //   const [code, setCode] = useState("");
// //   const [file, setFile] = useState(null);

// //   useEffect(() => {
// //     const fetchAssignments = async () => {
// //       try {
// //         const response = await fetch("http://localhost:5067/api/Assignment"); 
// //     //     const data = await response.json();
// //     //     setAssignments(data);
// //     //   } catch (error) {
// //     //     console.error("Error fetching assignments:", error);
// //     //   }
// //     // };
// //     if (!response.ok) {
// //       throw new Error(`HTTP error! status: ${response.status}`);
// //     }
// //     const data = await response.json();
// //     console.log("Assignments fetched:", data); // Add this
// //     setAssignments(data);
// //   } catch (error) {
// //     console.error("Error fetching assignments:", error);
// //   }
// // };
// //     fetchAssignments();
// //   }, []);

// //   const handleFileChange = (e) => {
// //     setFile(e.target.files[0]);
// //   };

// //   const handleCodeChange = (e) => {
// //     setCode(e.target.value);
// //   };

// //   const handleSubmitClick = (assignmentId) => {
// //     setSubmittedAssignment(submittedAssignment === assignmentId ? null : assignmentId);
// //   };

// //   const handleFormSubmit = async () => {
// //     const studentId = localStorage.getItem("userId");
    
// //     if (!studentId) {
// //       alert("User ID not found. Please log in again.");
// //       return;
// //     }

// //     if (code && file) {
// //       const formData = new FormData();
// //       // formData.append("id", "12222222wjshd23");
// //       formData.append("studentId", studentId);
// //       formData.append("assignmentId", submittedAssignment);
// //       formData.append("submittedCode", code);
// //       formData.append("executionImage", file);
// //       console.log("Form data:", formData);
// //       console.log("Form data:", formData);
// //       try {
// //         const response = await fetch("http://localhost:5067/api/AssignmentSubmission", {
// //           method: "POST",
// //           body: formData,
// //         });
// //         alert("Form data:", formData);
// //         if (response.ok) {
// //           alert("Submission successful!");
// //           // Reset after submission
// //           setSubmittedAssignment(null);
// //           setCode("");
// //           setFile(null);
// //         } else {
// //           const errorData = await response.json();
// //           console.error("Submission failed:", errorData);
// //           alert(`Submission failed: ${errorData.message || "Please try again."}`);
// //         }
// //       } catch (error) {
// //         console.error("Error submitting assignment:", error);
// //         alert("Error submitting assignment. Please try again.");
// //       }
// //     } else {
// //       alert("Please enter the code and upload a file.");
// //     }
// //   };

// //   return (
// //     <div className="p-4">
// //       <table className="min-w-full border-collapse border border-gray-300 mt-20">
// //         <thead className="bg-gray-200">
// //           <tr>
// //             <th className="border border-gray-300 px-6 py-2">Index</th>
// //             <th className="border border-gray-300 px-6 py-2">Assignment Description</th>
// //             <th className="border border-gray-300 px-6 py-2">Subject</th>
// //             <th className="border border-gray-300 px-6 py-2">Created Date</th>
// //             <th className="border border-gray-300 px-6 py-2">Due Date</th>
// //             <th className="border border-gray-300 px-6 py-2">Action</th>
// //           </tr>
// //         </thead>
// //         <tbody>
// //           {assignments.map((assignmentData, index) => {
// //             const assignment = assignmentData.assignment;


// //             if (!assignment) {
// //               return (
// //                 <tr key={index}>
// //                   <td colSpan="6" className="border border-gray-300 px-6 py-2">
// //                     Invalid assignment data
// //                   </td>
// //                 </tr>
// //               );
// //             }
// //             return (
// //               <React.Fragment key={assignment.id}>
// //                 <tr>
// //                   <td className="border border-gray-300 px-6 py-2 text-center">{index + 1}</td>
// //                   <td className="border border-gray-300 px-6 py-2">{assignment.description}</td>
// //                   <td className="border border-gray-300 px-6 py-2">{assignmentData.subjectName}</td>
// //                   <td className="border border-gray-300 px-6 py-2">{formatDate(assignment.createdDate)}</td>
// //                   <td className="border border-gray-300 px-6 py-2">{formatDate(assignment.dueDate)}</td>
// //                   <td className="border border-gray-300 px-6 py-2 text-center">
// //                     {activeTab !== "Completed" ? (
// //                       <button
// //                         className="bg-blue-500 text-white px-4 py-2 rounded"
// //                         onClick={() => handleSubmitClick(assignment.id)}
// //                       >
// //                         Submit Assignment
// //                       </button>
// //                     ) : (
// //                       <button className="bg-green-500 text-white px-4 py-2 rounded">
// //                         View Score
// //                       </button>
// //                     )}
// //                   </td>
// //                 </tr>

// //                 {submittedAssignment === assignment.id && (
// //                   <tr>
// //                     <td colSpan="6" className="border border-gray-300 p-4 bg-gray-100">
// //                       <h3 className="text-xl font-semibold mb-4">
// //                         Submit Code and File for Assignment {assignment.name}
// //                       </h3>
// //                       <div className="mb-4">
// //                         <label className="block text-sm font-medium text-gray-700">
// //                           Enter Code:
// //                         </label>
// //                         <textarea
// //                           value={code}
// //                           onChange={handleCodeChange}
// //                           rows="4"
// //                           className="mt-1 block w-full p-2 border border-gray-300 rounded"
// //                           placeholder="Enter your code here"
// //                         ></textarea>
// //                       </div>
// //                       <div className="mb-4">
// //                         <label className="block text-sm font-medium text-gray-700">
// //                           Upload File:
// //                         </label>
// //                         <input
// //                           type="file"
// //                           onChange={handleFileChange}
// //                           className="mt-1 block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4 file:rounded-full file:border-0 file:bg-blue-50 file:text-blue-700 hover:file:bg-blue-100"
// //                         />
// //                       </div>
// //                       <button
// //                         onClick={handleFormSubmit}
// //                         className="bg-green-500 text-white px-4 py-2 rounded"
// //                       >
// //                         Submit
// //                       </button>
// //                     </td>
// //                   </tr>
// //                 )}
// //               </React.Fragment>
// //             );
// //           })}
// //         </tbody>
// //       </table>
// //     </div>
// //   );
// // };

// // export default AssignmentTable;




// import React, { useEffect, useState } from "react";
// import axios from "axios";
// const formatDate = (isoString) => {
//   if (!isoString) return "N/A"; // Return a default value if isoString is undefined or empty
//   const date = new Date(isoString);
//   return date.toLocaleString("en-US", {
//     month: "long",
//     day: "numeric",
//     year: "numeric",
//     hour: "numeric",
//     minute: "numeric",
//     hour12: true,
//   });
// };

// const AssignmentTable = ({ activeTab }) => {
//   const [assignments, setAssignments] = useState([]);
//   const [submittedAssignment, setSubmittedAssignment] = useState(null);
//   const [code, setCode] = useState("");
//   const [file, setFile] = useState(null);

//   useEffect(() => {
//     const fetchAssignments = async () => {
//       try {
//         const response = await axios.get("http://localhost:5067/api/Assignment"); 
//         // const data = await response.json();
//     //     setAssignments(data);
//     //   } catch (error) {
//     //     console.error("Error fetching assignments:", error);
//     //   }
//     // };
//     //if (!response.ok) {
//     //  throw new Error(`HTTP error! status: ${response.status}`);
//    // }
//     const data = await response.data;
//     console.log("Assignments fetched:", data); // Add this
//     setAssignments(data);
//   } catch (error) {
//     console.error("Error fetching assignments:", error);
//   }
// };
//     fetchAssignments();
//   }, []);

//   const handleFileChange = (e) => {
//     setFile(e.target.files[0]);
//   };

//   const handleCodeChange = (e) => {
//     setCode(e.target.value);
//   };

//   const handleSubmitClick = (assignmentId) => {
//     setSubmittedAssignment(submittedAssignment === assignmentId ? null : assignmentId);
//   };

//   const handleFormSubmit = async () => {
//     const studentId = localStorage.getItem("userId");
//     console.log("Student ID:", studentId);
//     if (!studentId) {
//       alert("User ID not found. Please log in again.");
//       return;
//     }

//     if (code) {
//       console.log("Code:", code);
//       const formData = new FormData();
//       // formData.append("id", "12222222wjshd23");
//       formData.append("studentId", studentId);
//       formData.append("assignmentId", submittedAssignment);
//       formData.append("submittedCode", code);
//       formData.append("executionImage", "ssss");
//       console.log("Form data:", formData);
//       console.log("student:", formData.studentId);
//       console.log("asignment:", formData.assignmentId);

//       const printFormData = (formData) => {
//         // Using entries()
//         for (const [key, value] of formData.entries()) {
//             console.log(`${key}: ${value}`);
//         }
      
//       }
//       printFormData(formData);
//       try {
//         const response = await axios.post("http://localhost:5067/api/AssignmentSubmission",
//           {
//             // "StudentId":studentId,
//             // "AssignmentId":submittedAssignment,
//             // "SubmittedCode":code,
//             // "ExecutionImage":"ssss",
        
//               "id": "new12sssss223",
//               "studentId": studentId,
//               "assignmentId": submittedAssignment,
//               "submittedCode": "string",
//               "executionImage": "string",
//               "submittedDate": "2024-11-04T11:50:01.189Z"
            

//           });
//         alert("Form data:", formData);
//         // if (response.ok) {
//         //   alert("Submission successful!");
//         //   // Reset after submission
//         //   setSubmittedAssignment(null);
//         //   setCode("");
//         //   setFile(null);
//         // } else {
//         //   const errorData = await response.json();
//         //   console.error("Submission failed:", errorData);
//         //   alert(`Submission failed: ${errorData.message || "Please try again."}`);
//         // }
//         if (response.status === 200 || response.status === 201) {
//           alert("Submission successful!");
//           // Reset after submission
//           // setSubmittedAssignment(null);
//           // setCode("");
//           // setFile(null);
//         } else {
//           console.error("Submission failed:", response.data);
//           alert(`Submission failed: ${response.data?.message || "Please try again."}`);
//         }
        
//       } catch (error) {
//         console.error("Error submitting assignment:", error);
//         alert("Error submitting assignment. Please try again.");
//       }
//     } else {
//       alert("Please enter the code and upload a file.");
//     }
//   };

//   return (
//     <div className="p-4">
//       <table className="min-w-full border-collapse border border-gray-300 mt-20">
//         <thead className="bg-gray-200">
//           <tr>
//             <th className="border border-gray-300 px-6 py-2">Index</th>
//             <th className="border border-gray-300 px-6 py-2">Assignment Description</th>
//             <th className="border border-gray-300 px-6 py-2">Subject</th>
//             <th className="border border-gray-300 px-6 py-2">Created Date</th>
//             <th className="border border-gray-300 px-6 py-2">Due Date</th>
//             <th className="border border-gray-300 px-6 py-2">Action</th>
//           </tr>
//         </thead>
//         <tbody>
//           {assignments.map((assignmentData, index) => {
//             const assignment = assignmentData.assignment;


//             if (!assignment) {
//               return (
//                 <tr key={index}>
//                   <td colSpan="6" className="border border-gray-300 px-6 py-2">
//                     Invalid assignment data
//                   </td>
//                 </tr>
//               );
//             }
//             return (
//               <React.Fragment key={assignment.id}>
//                 <tr>
//                   <td className="border border-gray-300 px-6 py-2 text-center">{index + 1}</td>
//                   <td className="border border-gray-300 px-6 py-2">{assignment.description}</td>
//                   <td className="border border-gray-300 px-6 py-2">{assignmentData.subjectName}</td>
//                   <td className="border border-gray-300 px-6 py-2">{formatDate(assignment.createdDate)}</td>
//                   <td className="border border-gray-300 px-6 py-2">{formatDate(assignment.dueDate)}</td>
//                   <td className="border border-gray-300 px-6 py-2 text-center">
//                     {activeTab !== "Completed" ? (
//                       <button
//                         className="bg-blue-500 text-white px-4 py-2 rounded"
//                         onClick={() => handleSubmitClick(assignment.id)}
//                       >
//                         Submit Assignment
//                       </button>
//                     ) : (
//                       <button className="bg-green-500 text-white px-4 py-2 rounded">
//                         View Score
//                       </button>
//                     )}
//                   </td>
//                 </tr>

//                 {submittedAssignment === assignment.id && (
//                   <tr>
//                     <td colSpan="6" className="border border-gray-300 p-4 bg-gray-100">
//                       <h3 className="text-xl font-semibold mb-4">
//                         Submit Code and File for Assignment {assignment.name}
//                       </h3>
//                       <div className="mb-4">
//                         <label className="block text-sm font-medium text-gray-700">
//                           Enter Code:
//                         </label>
//                         <textarea
//                           value={code}
//                           onChange={handleCodeChange}
//                           rows="4"
//                           className="mt-1 block w-full p-2 border border-gray-300 rounded"
//                           placeholder="Enter your code here"
//                         ></textarea>
//                       </div>
//                       {/* <div className="mb-4">
//                         <label className="block text-sm font-medium text-gray-700">
//                           Upload File:
//                         </label>
//                         <input
//                           type="file"
//                           onChange={handleFileChange}
//                           className="mt-1 block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4 file:rounded-full file:border-0 file:bg-blue-50 file:text-blue-700 hover:file:bg-blue-100"
//                         />
//                       </div>  */}
//                       <button
//                         onClick={handleFormSubmit}
//                         className="bg-green-500 text-white px-4 py-2 rounded"
//                       >
//                         Submit
//                       </button>
//                     </td>
//                   </tr>
//                 )}
//               </React.Fragment>
//             );
//           })}
//         </tbody>
//       </table>
//     </div>
//   );
// };

// export default AssignmentTable;


old header 


// import React, { useState } from "react";
// import { useNavigate } from "react-router-dom";
// import { useAuth } from "../authentication/AuthContext";

// const Header = () => {
//   const navigate = useNavigate();
//   const { user, logout } = useAuth(); // Get user and logout function from AuthContext
//   const [activeTab, setActiveTab] = useState("Overdue");

//   const handleLogout = () => {
//     logout(); // Call logout function from context
//     console.log("Logging out...");
//     navigate("/");
//   };

//   return (
//     <header className="bg-gradient-to-r from-purple-600 to-blue-500 shadow-lg sticky h-20 w-full">
//       <div className="container mx-auto p-4 flex justify-between items-center h-full">
//         <div className="flex items-center justify-between w-full md:w-auto">
//           <img src="/logo_mobile.png" alt="Logo" className="h-full max-h-16" />
//         </div>
//         <nav className="hidden md:flex space-x-6">
//           <button
//             onClick={() => navigate("/dashboard")}
//             className="text-lg text-white hover:bg-white hover:text-blue-500 px-4 py-2 rounded transition duration-300"
//           >
//             Dashboard
//           </button>
//           <button
//             onClick={() => navigate("/profile")}
//             className="text-lg text-white hover:bg-white hover:text-blue-500 px-4 py-2 rounded transition duration-300"
//           >
//             Profile
//           </button>
//         </nav>

//         {user ? ( // Check if user is logged in
//           <button
//             onClick={handleLogout}
//             className="text-lg text-white bg-red-500 px-4 py-2 rounded-lg hover:bg-red-600 transition duration-300"
//           >
//             Logout
//           </button>
//         ) : null}

//         {/* Mobile Menu Button */}
//         <div className="md:hidden">
//           <button
//             className="text-white focus:outline-none"
//             onClick={() => console.log("Toggle mobile menu")}
//           >
//             <svg
//               className="w-6 h-6"
//               fill="none"
//               stroke="currentColor"
//               viewBox="0 0 24 24"
//               xmlns="http://www.w3.org/2000/svg"
//             >
//               <path
//                 strokeLinecap="round"
//                 strokeLinejoin="round"
//                 strokeWidth="2"
//                 d="M4 6h16M4 12h16m-7 6h7"
//               ></path>
//             </svg>
//           </button>
//         </div>
//       </div>

//       {/* Mobile Menu (hidden by default) */}
//       <nav className="md:hidden bg-gray-900 space-y-2 p-4">
//         <button
//           onClick={() => navigate("/dashboard")}
//           className="block text-lg text-white hover:bg-gray-700 px-4 py-2 rounded"
//         >
//           Dashboard
//         </button>
//         <button
//           onClick={() => navigate("/assignments")}
//           className="block text-lg text-white hover:bg-gray-700 px-4 py-2 rounded"
//         >
//           Assignments
//         </button>
//         <button
//           onClick={() => navigate("/submissions")}
//           className="block text-lg text-white hover:bg-gray-700 px-4 py-2 rounded"
//         >
//           Submissions
//         </button>
//         <button
//           onClick={() => navigate("/profile")}
//           className="block text-lg text-white hover:bg-gray-700 px-4 py-2 rounded"
//         >
//           Profile
//         </button>
//         {user && ( // Show logout button only if user is logged in
//           <button
//             onClick={handleLogout}
//             className="block text-lg text-white bg-red-500 px-4 py-2 rounded hover:bg-red-600"
//           >
//             Logout
//           </button>
//         )}
//       </nav>

//       {/* Nav Pills - Only show if user is a student */}
//       {user && user.role.trim() === "Student" && ( // Check user role
//         <nav className="bg-gray-100 p-4 border-b">
//           <ul className="flex justify-center space-x-4">
//             <li>
//               <button
//                 onClick={() => setActiveTab("Overdue")}
//                 className={`px-6 py-3 text-sm font-medium rounded-lg transition-all ${
//                   activeTab === "Overdue"
//                     ? "bg-blue-500 text-white"
//                     : "bg-gray-200 hover:bg-gray-300"
//                 }`}
//               >
//                 Overdue Assignments
//               </button>
//             </li>
//             <li>
//               <button
//                 onClick={() => setActiveTab("Ongoing")}
//                 className={`px-6 py-3 text-sm font-medium rounded-lg transition-all ${
//                   activeTab === "Ongoing"
//                     ? "bg-blue-500 text-white"
//                     : "bg-gray-200 hover:bg-gray-300"
//                 }`}
//               >
//                 Ongoing Assignments
//               </button>
//             </li>
//             <li>
//               <button
//                 onClick={() => setActiveTab("Completed")}
//                 className={`px-6 py-3 text-sm font-medium rounded-lg transition-all ${
//                   activeTab === "Completed"
//                     ? "bg-blue-500 text-white"
//                     : "bg-gray-200 hover:bg-gray-300"
//                 }`}
//               >
//                 Completed Assignments
//               </button>
//             </li>
//           </ul>
//         </nav>
//       )}
//     </header>
//   );
// };

// export default Header;

